# 基大调音符频率表
BASE_FREQS: dict[str, list[int]] = {
    # A大调（基调频率：220Hz）
    'A': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        55  , 58  , 62  , 65  , 69  , 73  , 78  , 82  , 87  , 92  , 98  , 104 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        110 , 117 , 123 , 131 , 139 , 147 , 156 , 165 , 175 , 185 , 196 , 208 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        220 , 233 , 247 , 262 , 277 , 294 , 311 , 330 , 349 , 370 , 392 , 415 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        440 , 466 , 494 , 523 , 554 , 587 , 622 , 659 , 698 , 740 , 784 , 831 ,
    # 高音（2个八度）
    #   1
        880
    ],

    # 升A大调（基调频率：233Hz）
    'A#': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        58  , 62  , 65  , 69  , 73  , 78  , 82  , 87  , 92  , 98  , 104 , 110 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        117 , 123 , 131 , 139 , 147 , 156 , 165 , 175 , 185 , 196 , 208 , 220 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        233 , 247 , 262 , 277 , 294 , 311 , 330 , 349 , 370 , 392 , 415 , 440 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        466 , 494 , 523 , 554 , 587 , 622 , 659 , 698 , 740 , 784 , 831 , 880 ,
    # 高音（2个八度）
    #   1
        932
    ],

    # B大调（基调频率：247Hz）
    'B': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        62  , 65  , 69  , 73  , 78  , 82  , 87  , 92  , 98  , 104 , 110 , 117 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        123 , 131 , 139 , 147 , 156 , 165 , 175 , 185 , 196 , 208 , 220 , 233 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        247 , 262 , 277 , 294 , 311 , 330 , 349 , 370 , 392 , 415 , 440 , 466 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        494 , 523 , 554 , 587 , 622 , 659 , 698 , 740 , 784 , 831 , 880 , 932 ,
    # 高音（2个八度）
    #   1
        988
    ],

    # C大调（基调频率：262Hz）
    'C': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        65  , 69  , 73  , 78  , 82  , 87  , 92  , 98  , 104 , 110 , 117 , 123 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        131 , 139 , 147 , 156 , 165 , 175 , 185 , 196 , 208 , 220 , 233 , 247 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        262 , 277 , 294 , 311 , 330 , 349 , 370 , 392 , 415 , 440 , 466 , 494 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        523 , 554 , 587 , 622 , 659 , 698 , 740 , 784 , 831 , 880 , 932 , 988 ,
    # 高音（2个八度）
    #   1
        1047
    ],

    # 升C大调（基调频率：277Hz）
    'C#': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        69  , 73  , 78  , 82  , 87  , 92  , 98  , 104 , 110 , 117 , 123 , 131 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        139 , 147 , 156 , 165 , 175 , 185 , 196 , 208 , 220 , 233 , 247 , 262 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        277 , 294 , 311 , 330 , 349 , 370 , 392 , 415 , 440 , 466 , 494 , 523 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        554 , 587 , 622 , 659 , 698 , 740 , 784 , 831 , 880 , 932 , 988 , 1047,
    # 高音（2个八度）
    #   1
        1109
    ],

    # D大调（基调频率：294Hz）
    'D': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        73  , 78  , 82  , 87  , 92  , 98  , 104 , 110 , 117 , 123 , 131 , 139 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        147 , 156 , 165 , 175 , 185 , 196 , 208 , 220 , 233 , 247 , 262 , 277 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        294 , 311 , 330 , 349 , 370 , 392 , 415 , 440 , 466 , 494 , 523 , 554 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        587 , 622 , 659 , 698 , 740 , 784 , 831 , 880 , 932 , 988 , 1047, 1109,
    # 高音（2个八度）
    #   1
        1175
    ],

    # 升D大调（基调频率：311Hz）
    'D#': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        78  , 82  , 87  , 92  , 98  , 104 , 110 , 117 , 123 , 131 , 139 , 147 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        156 , 165 , 175 , 185 , 196 , 208 , 220 , 233 , 247 , 262 , 277 , 294 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        311 , 330 , 349 , 370 , 392 , 415 , 440 , 466 , 494 , 523 , 554 , 587 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        622 , 659 , 698 , 740 , 784 , 831 , 880 , 932 , 988 , 1047, 1109, 1175,
    # 高音（2个八度）
    #   1
        1245
    ],

    # E大调（基调频率：330Hz）
    'E': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        82  , 87  , 92  , 98  , 104 , 110 , 117 , 123 , 131 , 139 , 147 , 156 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        165 , 175 , 185 , 196 , 208 , 220 , 233 , 247 , 262 , 277 , 294 , 311 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        330 , 349 , 370 , 392 , 415 , 440 , 466 , 494 , 523 , 554 , 587 , 622 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        659 , 698 , 740 , 784 , 831 , 880 , 932 , 988 , 1047, 1109, 1175, 1245,
    # 高音（2个八度）
    #   1
        1319
    ],

    # F大调（基调频率：349Hz）
    'F': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        87  , 92  , 98  , 104 , 110 , 117 , 123 , 131 , 139 , 147 , 156 , 165 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        175 , 185 , 196 , 208 , 220 , 233 , 247 , 262 , 277 , 294 , 311 , 330 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        349 , 370 , 392 , 415 , 440 , 466 , 494 , 523 , 554 , 587 , 622 , 659 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        698 , 740 , 784 , 831 , 880 , 932 , 988 , 1047, 1109, 1175, 1245, 1319,
    # 高音（2个八度）
    #   1
        1397
    ],

    # 升F大调（基调频率：370Hz）
    'F#': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        92  , 98  , 104 , 110 , 117 , 123 , 131 , 139 , 147 , 156 , 165 , 175 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        185 , 196 , 208 , 220 , 233 , 247 , 262 , 277 , 294 , 311 , 330 , 349 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        370 , 392 , 415 , 440 , 466 , 494 , 523 , 554 , 587 , 622 , 659 , 698 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        740 , 784 , 831 , 880 , 932 , 988 , 1047, 1109, 1175, 1245, 1319, 1397,
    # 高音（2个八度）
    #   1
        1480
    ],

    # G大调（基调频率：392Hz）
    'G': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        98  , 104 , 110 , 117 , 123 , 131 , 139 , 147 , 156 , 165 , 175 , 185 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        196 , 208 , 220 , 233 , 247 , 262 , 277 , 294 , 311 , 330 , 349 , 370 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        392 , 415 , 440 , 466 , 494 , 523 , 554 , 587 , 622 , 659 , 698 , 740 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        784 , 831 , 880 , 932 , 988 , 1047, 1109, 1175, 1245, 1319, 1397, 1480,
    # 高音（2个八度）
    #   1
        1568
    ],

    # 升G大调（基调频率：415Hz）
    'G#': [
    # 低音（2个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        104 , 110 , 117 , 123 , 131 , 139 , 147 , 156 , 165 , 175 , 185 , 196 ,
    # 低音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        208 , 220 , 233 , 247 , 262 , 277 , 294 , 311 , 330 , 349 , 370 , 392 ,
    # 正常音
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        415 , 440 , 466 , 494 , 523 , 554 , 587 , 622 , 659 , 698 , 740 , 784 ,
    # 高音（1个八度）
    #   1     1#    2     2#    3     4     4#    5     5#    6     6#    7
        831 , 880 , 932 , 988 , 1047, 1109, 1175, 1245, 1319, 1397, 1480, 1568,
    # 高音（2个八度）
    #   1
        1661
    ]
}


class Note:
    """
    定义音乐中的一个音符。
    """

    def __init__(
        self,
        id: int,
        level: int = 0,
        length: float = 1.0,
        half_high: bool = False,
        half_low: bool = False
    ):
        """
        构造一个音符。
        """

        # 音符的标号，应为0~7之间的整数。
        # 其中0表示休止符。
        self.id: int = id

        # 音符的高低，应为-2~2之间的整数。
        # 为负数表示低音（-1为低音，-2为重低音），
        # 为正数表示高音（1为高音，2为重高音），
        # 为0表示正常音（不升音也不降音）。
        # 默认值：0
        self.level: int = level

        # 音符的时长，应为正浮点数。
        # 如：2.0表示二分音符，4.0表示全音符，
        # 1.0表示四分音符，0.5表示八分音符，
        # 0.25表示十六分音符，3.0表示二分附点音符，
        # 1.5表示四分附点音符，依次类推。
        # 默认值：1.0
        self.length: float = length

        # 音符是否升半音。
        # 默认值：False
        self.half_high: bool = half_high
        
        # 音符是否降半音。
        # 默认值：False
        self.half_low: bool = half_low
    
    def freq(self, base: str) -> int:
        """
        根据给定的音符与基大调，获取音符对应的频率。
        """

        return note_freq(self, base)


class Music:
    """
    定义用于无源蜂鸣器演奏的一首完整音乐。
    """

    def __init__(
        self,
        name: str | None = None,
        base: str = 'C',
        speed: float = 1.0,
        notes: list[Note] = [],
        unit_length: float = 0.5
    ):
        # 音乐的名称（可为None）。
        self.name: str | None = name

        # 音乐的基大调。
        self.base: str = base

        # 音乐的播放速度，数值越小播放越快。
        self.speed: float = speed

        # 组成音乐的所有音符。
        self.notes: list[Note] = notes
        
        # 音符单位时长（一个四分音符的持续时长，单位为秒）
        self.unit_length: float = unit_length
    
    def load(self, music_code: str) -> None:
        """
        从给定的乐谱代码中加载音乐。
        """

        def finish_note(note: Note) -> None:
            self.notes.append(note)

        code = music_code.replace(' ', '')\
            .replace('\t', '')\
            .replace('\n', '')

        note_ids = [str(i) for i in range(8)]

        cur_note = None
        temp_str = ''
        decoding_base = False
        decoding_speed = False
        for code_c in code:
            if decoding_base or decoding_speed:
                if decoding_base and code_c == '=':
                    self.base = temp_str
                    temp_str = ''
                    decoding_base = False
                elif decoding_speed and code_c == '~':
                    self.speed = float(temp_str)
                    temp_str = ''
                    decoding_speed = False
                else:
                    temp_str += code_c
            elif cur_note is not None and code_c not in note_ids:
                if code_c == 'b':
                    cur_note.half_low = True
                elif code_c == '#':
                    cur_note.half_high = True
                elif code_c == '/':
                    cur_note.level -= 1
                elif code_c == '^':
                    cur_note.level += 1
                elif code_c == '_':
                    cur_note.length /= 2.0
                elif code_c == '-':
                    cur_note.length *= 2.0
                elif code_c == '.':
                    cur_note.length *= 1.5
                else:
                    raise NotImplementedError(
                        "Unknown character met while "
                        "decoding music (decoding a "
                        f"note): {code_c}"
                    )
            else:
                if code_c == '=':
                    decoding_base = True
                elif code_c == '~':
                    decoding_speed = True
                else:
                    if code_c in note_ids:
                        if cur_note is not None:
                            finish_note(cur_note)
                        cur_note = Note(int(code_c))
                    else:
                        raise NotImplementedError(
                            "Unknown character met while "
                            f"decoding music: {code_c}"
                        )

        if decoding_base and len(temp_str) > 0:
            self.base = temp_str
        if decoding_speed and len(temp_str) > 0:
            self.speed = float(temp_str)
        if cur_note is not None:
            finish_note(cur_note)
    
    def note_freq(self, note: Note) -> int:
        """
        返回给定音符在该音乐基大调上的频率。
        """

        return note_freq(note, self.base)


def base_freqs(base: str) -> list[int]:
    """
    根据基大调返回对应的频率列表。
    """

    key = base
    if base == 'Bb':
        # 降B大调即为升A大调
        key = 'A#'
    elif base == 'Db':
        # 降D大调即为升C大调
        key = 'C#'
    elif base == 'Eb':
        # 降E大调即为升D大调
        key = 'D#'
    elif base == 'Gb':
        # 降G大调即为升F大调
        key = 'F#'
    elif base == 'Ab':
        # 降A大调即为升G大调
        key = 'G#'
    
    return BASE_FREQS[key]


def note_freq(note: Note, base: str) -> int:
    """
    根据给定的音符与基大调，获取音符对应的频率。
    """
    
    if note.id == 0:
        return 0

    index_level = note.level + 2
    base_index = index_level * 12
    index_offset = 0
    if note.id == 1:
        index_offset = 0
    elif note.id == 2:
        index_offset = 2
    elif note.id == 3:
        index_offset = 4
    elif note.id == 4:
        index_offset = 5
    elif note.id == 5:
        index_offset = 7
    elif note.id == 6:
        index_offset = 9
    elif note.id == 7:
        index_offset = 11
    if note.half_high:
        index_offset += 1
    if note.half_low:
        index_offset -= 1
    index = base_index + index_offset

    return base_freqs(base)[index]